Elm.Helpers = Elm.Helpers || {};
Elm.Helpers.make = function (_elm) {
   "use strict";
   _elm.Helpers = _elm.Helpers || {};
   if (_elm.Helpers.values) return _elm.Helpers.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var toBool = function (m) {    var _p0 = m;if (_p0.ctor === "Nothing") {    return false;} else {    return true;}};
   var elem = F2(function (e,ls) {
      elem: while (true) {
         var _p1 = ls;
         if (_p1.ctor === "[]") {
               return false;
            } else {
               if (_U.eq(_p1._0,e)) return true; else {
                     var _v2 = e,_v3 = _p1._1;
                     e = _v2;
                     ls = _v3;
                     continue elem;
                  }
            }
      }
   });
   return _elm.Helpers.values = {_op: _op,elem: elem,toBool: toBool};
};