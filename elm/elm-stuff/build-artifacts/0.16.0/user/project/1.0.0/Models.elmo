Elm.Models = Elm.Models || {};
Elm.Models.make = function (_elm) {
   "use strict";
   _elm.Models = _elm.Models || {};
   if (_elm.Models.values) return _elm.Models.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Dict = Elm.Dict.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var Filter = F4(function (a,b,c,d) {    return {allRegions: a,allOrgs: b,visibleRegions: c,visibleOrgs: d};});
   var Model = F3(function (a,b,c) {    return {jobs: a,jobFilter: b,fromStorage: c};});
   var URL = {ctor: "URL"};
   var compareJob = F3(function (f,j,k) {
      var comp = F4(function (af,bf,a,b) {    return _U.eq(af,bf) ? A3(compareJob,URL,a,b) : _U.cmp(af,bf) > 0 ? $Basics.GT : $Basics.LT;});
      var divorg = function (a) {    return A2($Basics._op["++"],a.organization,a.division);};
      var _p0 = f;
      switch (_p0.ctor)
      {case "URL": return A4(comp,j.urlDetail,k.urlDetail,j,k);
         case "Title": return A4(comp,j.title,k.title,j,k);
         case "Organization": return A4(comp,divorg(j),divorg(k),j,k);
         case "Salary": return A4(comp,j.salaryAmount,k.salaryAmount,j,k);
         case "PostingDate": return A4(comp,j.datePosted,k.datePosted,j,k);
         case "ClosingDate": return A4(comp,j.dateClosing,k.dateClosing,j,k);
         default: return A4(comp,j.urlDetail,k.urlDetail,j,k);}
   });
   var sortJobs = F2(function (criteria,jobs) {
      var currentJobsList = A2($Maybe.withDefault,_U.list([]),jobs);
      var sortedCurrentList = A2($List.sortWith,compareJob(criteria),currentJobsList);
      return _U.eq(currentJobsList,sortedCurrentList) ? $Maybe.Just($List.reverse(sortedCurrentList)) : $Maybe.Just(sortedCurrentList);
   });
   var Region = {ctor: "Region"};
   var PostingDate = {ctor: "PostingDate"};
   var ClosingDate = {ctor: "ClosingDate"};
   var Salary = {ctor: "Salary"};
   var Organization = {ctor: "Organization"};
   var Title = {ctor: "Title"};
   var Job = F9(function (a,b,c,d,e,f,g,h,i) {
      return {title: a,organization: b,division: c,urlDetail: d,dateClosing: e,salaryWaged: f,salaryAmount: g,region: h,datePosted: i};
   });
   var FromStorage = function (a) {    return {ctor: "FromStorage",_0: a};};
   var ToggleFilter = F2(function (a,b) {    return {ctor: "ToggleFilter",_0: a,_1: b};});
   var SortJobs = function (a) {    return {ctor: "SortJobs",_0: a};};
   var ShowInitialJobs = function (a) {    return {ctor: "ShowInitialJobs",_0: a};};
   var GetJobs = {ctor: "GetJobs"};
   var NoOp = {ctor: "NoOp"};
   return _elm.Models.values = {_op: _op
                               ,NoOp: NoOp
                               ,GetJobs: GetJobs
                               ,ShowInitialJobs: ShowInitialJobs
                               ,SortJobs: SortJobs
                               ,ToggleFilter: ToggleFilter
                               ,FromStorage: FromStorage
                               ,Job: Job
                               ,Title: Title
                               ,Organization: Organization
                               ,Salary: Salary
                               ,ClosingDate: ClosingDate
                               ,PostingDate: PostingDate
                               ,Region: Region
                               ,URL: URL
                               ,Model: Model
                               ,Filter: Filter
                               ,sortJobs: sortJobs
                               ,compareJob: compareJob};
};