Elm.Site = Elm.Site || {};
Elm.Site.make = function (_elm) {
   "use strict";
   _elm.Site = _elm.Site || {};
   if (_elm.Site.values) return _elm.Site.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Dict = Elm.Dict.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Markdown = Elm.Markdown.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Models = Elm.Models.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var aboutMessage = $Markdown.toHtml("\n\n# What is Gainful?\n\nJob searching is bad. Government websites are bad. This makes searching for government jobs extra bad.\n\nGainful makes government job postings simple and sane. Every day, it finds all the newest postings and present them in a table. You can filter and sort listings however you want, and save your results as a daily email newsletter.\n\nNo signups, no ads. It could not be easier.\n\n## What job sites does Gainful search?\n\nGlad you asked. Gainful searches the following sources:\n\n- City of Toronto\n- City of Victoria\n- City of Mississauga\n- Ontario Public Service in the GTA (TODO)\n- ...etc\n\n## Can I help?\n\n[twitter]: http://www.twitter.com/rgscherf\n\nYes! [Get in touch][twitter] or make a [pull request](http://www.github.com/rgscherf/gainful2).\n\n## Who wrote Gainful?\n\nGainful is written by Robert Scherf. He\'s looking for a job--[hire him][twitter]!\n\n");
   var addCommas = function (amt) {
      var start = $String.reverse($Basics.toString($Basics.round(amt)));
      var len = $String.length(start);
      return _U.cmp(len,4) < 0 ? $String.reverse(start) : $String.reverse(A2($Basics._op["++"],
      A2($String.left,3,start),
      A2($Basics._op["++"],",",A2($String.dropLeft,3,start))));
   };
   var salary = F2(function (amount,waged) {
      var postfix = waged ? " /hr" : " /yr";
      var stringSalary = waged ? $Basics.toString(amount) : addCommas(amount);
      return _U.eq(amount,0) ? "--" : A2($Basics._op["++"],"$ ",A2($Basics._op["++"],stringSalary,postfix));
   });
   var individualJob = function (_p0) {
      var _p1 = _p0;
      var _p2 = _p1._1;
      var rowClass = _p1._0 ? "shadedRow" : "unshadedRow";
      var orgAndDiv = !_U.eq(_p2.division,"") ? A2($Basics._op["++"],_p2.organization,A2($Basics._op["++"],", ",_p2.division)) : _p2.organization;
      return _U.list([A2($Html.tr,
      _U.list([$Html$Attributes.$class(rowClass)]),
      _U.list([A2($Html.td,_U.list([]),_U.list([$Html.text(orgAndDiv)]))
              ,A2($Html.td,_U.list([]),_U.list([A2($Html.a,_U.list([$Html$Attributes.href(_p2.urlDetail)]),_U.list([$Html.text(_p2.title)]))]))
              ,A2($Html.td,_U.list([$Html$Attributes.align("right")]),_U.list([$Html.text(A2(salary,_p2.salaryAmount,_p2.salaryWaged))]))
              ,A2($Html.td,_U.list([$Html$Attributes.align("right")]),_U.list([$Html.text(_p2.dateClosing)]))]))]);
   };
   var viewJobs = F3(function (address,fil,maybeJobs) {
      var jobs = A2($List.filter,function (j) {    return A2($List.member,j.organization,fil.visibleOrgs);},A2($Maybe.withDefault,_U.list([]),maybeJobs));
      var shaded = $List.concat(A2($List.repeat,$List.length(jobs),_U.list([true,false])));
      var jobAndClass = A3($List.map2,F2(function (v0,v1) {    return {ctor: "_Tuple2",_0: v0,_1: v1};}),shaded,jobs);
      var tbody = A2($List.concatMap,individualJob,jobAndClass);
      return A2($Html.table,
      _U.list([$Html$Attributes.id("jobtable"),$Html$Attributes.$class("shadow")]),
      A2($Basics._op["++"],
      _U.list([A2($Html.tr,
      _U.list([]),
      _U.list([A2($Html.th,
              _U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.Organization)),$Html$Attributes.$class("leftHead")]),
              _U.list([$Html.text("Organization")]))
              ,A2($Html.th,
              _U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.Title)),$Html$Attributes.$class("leftHead")]),
              _U.list([$Html.text("Title")]))
              ,A2($Html.th,
              _U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.Salary)),$Html$Attributes.$class("rightHead")]),
              _U.list([$Html.text("Salary/Wage")]))
              ,A2($Html.th,
              _U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.ClosingDate)),$Html$Attributes.$class("rightHead")]),
              _U.list([$Html.text("Closing Date")]))]))]),
      tbody));
   });
   var filterBox = F2(function (a,f) {
      var accessor = F2(function (field,fil) {
         return _U.eq(field,$Models.Organization) ? function (_) {
            return _.visibleOrgs;
         }(fil) : function (_) {
            return _.visibleRegions;
         }(fil);
      });
      var btn = F3(function (fil,field,x) {
         return A2($Html.button,
         _U.list([$Html$Attributes.$class(A2($List.member,x,A2(accessor,field,fil)) ? "visible" : "notVisible")
                 ,A2($Html$Events.onClick,a,A2($Models.ToggleFilter,field,x))]),
         _U.list([$Html.text(x)]));
      });
      return _U.list([A2($Html.div,
      _U.list([$Html$Attributes.id("filterwrapper"),$Html$Attributes.$class("shadow")]),
      _U.list([A2($Html.div,
              _U.list([$Html$Attributes.id("filtertable")]),
              _U.list([A2($Html.table,
              _U.list([]),
              _U.list([A2($Html.tr,
                      _U.list([]),
                      _U.list([A2($Html.td,_U.list([$Html$Attributes.$class("filtertitle")]),_U.list([$Html.text("Filter by region:")]))
                              ,A2($Html.td,_U.list([]),A2($List.map,A2(btn,f,$Models.Region),$List.sort($Dict.keys(f.allRegions))))]))
                      ,A2($Html.tr,
                      _U.list([]),
                      _U.list([A2($Html.td,_U.list([$Html$Attributes.$class("filtertitle")]),_U.list([$Html.text("Filter by organization:")]))
                              ,A2($Html.td,_U.list([]),A2($List.map,A2(btn,f,$Models.Organization),$List.sort($Dict.keys(f.allOrgs))))]))]))]))
              ,A2($Html.div,
              _U.list([$Html$Attributes.id("filternewsletter")]),
              _U.list([A2($Html.button,_U.list([]),_U.list([$Html.text("Save filters to daily newsletter")]))]))]))]);
   });
   var navBar = A2($Html.nav,
   _U.list([]),
   _U.list([A2($Html.span,_U.list([$Html$Attributes.$class("logo")]),_U.list([$Html.text("Gainful")]))
           ,A2($Html.a,
           _U.list([$Html$Attributes.href("http://www.google.com")]),
           _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-2x fa-fw fa-info-circle nav-icon")]),_U.list([]))]))
           ,A2($Html.a,
           _U.list([$Html$Attributes.href("http://www.github.com/rgscherf/gainful2")]),
           _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-2x fa-fw fa-github nav-icon")]),_U.list([]))]))
           ,A2($Html.a,
           _U.list([$Html$Attributes.href("http://www.twitter.com/rgscherf")]),
           _U.list([A2($Html.i,_U.list([$Html$Attributes.$class("fa fa-2x fa-fw fa-twitter nav-icon")]),_U.list([]))]))]));
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([navBar
              ,A2($Html.div,_U.list([$Html$Attributes.$class("spacer")]),_U.list([]))
              ,A2($Html.div,_U.list([]),A2(filterBox,address,model.jobFilter))
              ,A2($Html.div,_U.list([$Html$Attributes.$class("spacer")]),_U.list([]))
              ,A3(viewJobs,address,model.jobFilter,model.jobs)
              ,A2($Html.div,_U.list([$Html$Attributes.$class("spacer")]),_U.list([]))
              ,A2($Html.div,_U.list([$Html$Attributes.$class("spacer")]),_U.list([]))
              ,A2($Html.div,_U.list([$Html$Attributes.$class("spacer")]),_U.list([]))
              ,A2($Html.div,_U.list([$Html$Attributes.$class("spacer")]),_U.list([]))]));
   });
   return _elm.Site.values = {_op: _op
                             ,view: view
                             ,navBar: navBar
                             ,filterBox: filterBox
                             ,viewJobs: viewJobs
                             ,individualJob: individualJob
                             ,salary: salary
                             ,addCommas: addCommas
                             ,aboutMessage: aboutMessage};
};