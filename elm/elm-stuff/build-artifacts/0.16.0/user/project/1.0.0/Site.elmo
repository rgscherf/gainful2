Elm.Site = Elm.Site || {};
Elm.Site.make = function (_elm) {
   "use strict";
   _elm.Site = _elm.Site || {};
   if (_elm.Site.values) return _elm.Site.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Markdown = Elm.Markdown.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Models = Elm.Models.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var aboutMessage = $Markdown.toHtml("\n\n# What is Gainful?\n\nJob searching is bad. Government websites are bad. This makes searching for government jobs extra bad.\n\nGainful makes government job postings simple and sane. Every day, it finds all the newest postings and present them in a table. You can filter and sort listings however you want, and save your results as a daily email newsletter.\n\nNo signups, no ads. It could not be easier.\n\n## What job sites does Gainful search?\n\nGlad you asked. Gainful searches the following sources:\n\n- City of Toronto\n- City of Victoria\n- City of Mississauga\n- Ontario Public Service in the GTA (TODO)\n- ...etc\n\n## Can I help?\n\n[twitter]: http://www.twitter.com/rgscherf\n\nYes! [Get in touch][twitter] or make a [pull request](http://www.github.com/rgscherf/gainful2).\n\n## Who wrote Gainful?\n\nGainful is written by Robert Scherf. He\'s looking for a job--[hire him][twitter]!\n\n");
   var individualJob = function (job) {
      var orgAndDiv = !_U.eq(job.division,"") ? A2($Basics._op["++"],job.organization,A2($Basics._op["++"],", ",job.division)) : job.organization;
      var postfix = job.salaryWaged ? " /hr" : " /yr";
      var stringSalary = $Basics.toString(job.salaryWaged ? job.salaryAmount : $Basics.toFloat($Basics.round(job.salaryAmount)));
      return _U.list([A2($Html.tr,
      _U.list([]),
      _U.list([A2($Html.td,_U.list([]),_U.list([A2($Html.a,_U.list([$Html$Attributes.href(job.urlDetail)]),_U.list([$Html.text(job.title)]))]))
              ,A2($Html.td,_U.list([]),_U.list([$Html.text(orgAndDiv)]))
              ,A2($Html.td,
              _U.list([$Html$Attributes.align("right")]),
              _U.list([$Html.text(_U.eq(job.salaryAmount,0) ? "--" : A2($Basics._op["++"],"$ ",A2($Basics._op["++"],stringSalary,postfix)))]))
              ,A2($Html.td,_U.list([$Html$Attributes.align("right")]),_U.list([$Html.text(job.dateClosing)]))]))]);
   };
   var viewJobs = F2(function (address,maybeJobs) {
      var tbody = function () {
         var _p0 = maybeJobs;
         if (_p0.ctor === "Nothing") {
               return _U.list([A2($Html.tr,_U.list([]),_U.list([]))]);
            } else {
               return A2($List.concatMap,individualJob,_p0._0);
            }
      }();
      return A2($Html.table,
      _U.list([$Html$Attributes.align("center"),$Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: "90%"}]))]),
      A2($Basics._op["++"],
      _U.list([A2($Html.tr,
      _U.list([]),
      _U.list([A2($Html.th,_U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.Title))]),_U.list([$Html.text("Title")]))
              ,A2($Html.th,_U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.Organization))]),_U.list([$Html.text("Organization")]))
              ,A2($Html.th,_U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.Salary))]),_U.list([$Html.text("Salary/Wage")]))
              ,A2($Html.th,_U.list([A2($Html$Events.onClick,address,$Models.SortJobs($Models.ClosingDate))]),_U.list([$Html.text("Closing Date")]))]))]),
      tbody));
   });
   var navBar = A2($Html.nav,_U.list([$Html$Attributes.$class("logo")]),_U.list([$Html.text("Gainful")]));
   var view = F2(function (address,model) {    return A2($Html.div,_U.list([]),_U.list([navBar,A2(viewJobs,address,model.jobs),aboutMessage]));});
   return _elm.Site.values = {_op: _op,view: view,navBar: navBar,viewJobs: viewJobs,individualJob: individualJob,aboutMessage: aboutMessage};
};